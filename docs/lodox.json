{
  "modules": [
    {
      "exports": [
        {
          "patterns": [
            "()"
          ],
          "name": "namespace",
          "arity": 0,
          "doc": "The namespace in which `lodox` is registered, `lfe`.\n",
          "line": 12
        },
        {
          "patterns": [
            "()"
          ],
          "name": "provider-name",
          "arity": 0,
          "doc": "The 'user friendly' name of the task, `lodox`.\n",
          "line": 16
        },
        {
          "patterns": [
            "()"
          ],
          "name": "short-desc",
          "arity": 0,
          "doc": "A one line, short description of the task, used in lists of providers.\n",
          "line": 20
        },
        {
          "patterns": [
            "()"
          ],
          "name": "deps",
          "arity": 0,
          "doc": "The list of dependencies, providers, that need to run before this one.\n",
          "line": 24
        },
        {
          "patterns": [
            "()"
          ],
          "name": "desc",
          "arity": 0,
          "doc": "The description for the task, used by `rebar3 help`.\n",
          "line": 28
        },
        {
          "patterns": [
            "(state)"
          ],
          "name": "init",
          "arity": 1,
          "doc": "Initiate the Lodox provider.\n",
          "line": 34
        },
        {
          "patterns": [
            "(state)"
          ],
          "name": "do",
          "arity": 1,
          "doc": "Generate documentation for each application in the project.\n\nSee: [[lodox-html-writer:write-docs/1]]\n",
          "line": 52
        },
        {
          "patterns": [
            "(reason)"
          ],
          "name": "format_error",
          "arity": 1,
          "doc": "When an exception is raised or a value returned as\n`#(error #((MODULE) reason)`, `(format_error reason)` will be called\nso a string can be formatted explaining the issue.\n",
          "line": 61
        },
        {
          "patterns": [
            "(app-info)"
          ],
          "name": "write-docs",
          "arity": 1,
          "doc": "Given an [app_info_t], call [[lodox-html-writer:write-docs/1]] appropriately.\n\n[app_info_t]: https://github.com/rebar/rebar3/blob/master/src/rebar_app_info.erl\n",
          "line": 69
        },
        {
          "patterns": [
            "(name rebar-opts (when (is_binary name)))",
            "(app rebar-opts (when (is_atom app)))"
          ],
          "name": "get-lodox-opts",
          "arity": 2,
          "doc": "Parse rebar.config for Lodox options.\nIf `name` is a binary, convert it to an atom first.\n",
          "line": 90
        },
        {
          "patterns": [
            "(key value opts)"
          ],
          "name": "maybe-default",
          "arity": 3,
          "doc": "Prepend `` `#(,key ,value) `` to `opts` iff `key` is not already defined.\n",
          "line": 102
        }
      ],
      "behaviour": [
        "provider"
      ],
      "name": "lodox",
      "doc": "The Lodox [`rebar3`][1] [provider][2].\n\n[1]: http://www.rebar3.org/docs/plugins\n[2]: https://github.com/tsloughter/providers\n",
      "filepath": "/Users/mohacker/src/lfe-rebar3/lodox/src/lodox.lfe"
    },
    {
      "exports": [
        {
          "patterns": [
            "(app)"
          ],
          "name": "write-docs",
          "arity": 1,
          "doc": "Take raw documentation info and turn it into formatted HTML.\nWrite to and return `output-path` in `app`. Default: `\"./docs\"`\n",
          "line": 17
        },
        {
          "patterns": [
            "(x (when (is_atom x)))",
            "(text)"
          ],
          "name": "escape-html",
          "arity": 1,
          "doc": "Change special characters into HTML character entities.\n",
          "line": 32
        }
      ],
      "behaviour": [],
      "name": "lodox-html-writer",
      "doc": "Documentation writer that outputs HTML.\n",
      "filepath": "/Users/mohacker/src/lfe-rebar3/lodox/src/lodox-html-writer.lfe"
    },
    {
      "exports": [
        {
          "patterns": [
            "(app)"
          ],
          "name": "write-docs",
          "arity": 1,
          "doc": "Take raw documentation info and turn it into JSON.\nWrite to and return `output-path` in `app`. Default: `\"./docs\"`\n",
          "line": 11
        }
      ],
      "behaviour": [],
      "name": "lodox-json-writer",
      "doc": "Documentation writer that outputs JSON.\n",
      "filepath": "/Users/mohacker/src/lfe-rebar3/lodox/src/lodox-json-writer.lfe"
    },
    {
      "exports": [
        {
          "patterns": [
            "(app-name)"
          ],
          "name": "docs",
          "arity": 1,
          "doc": "Equivalent to [[docs/2]] with the empty list as `excluded-modules`.\n",
          "line": 13
        },
        {
          "patterns": [
            "(app-name opts)"
          ],
          "name": "docs",
          "arity": 2,
          "doc": "Given an app-name (binary), return a proplist like:\n\n```commonlisp\n[#(name        #\"lodox\")\n #(version     \"0.16.3\")\n #(description \"The LFE rebar3 Lodox plugin\")\n #(documents   [])\n #(modules     {{list of proplists of module metadata}})\n #(documented  {{ see documented/1 }})]\n```\n",
          "line": 20
        },
        {
          "patterns": [
            "(modules)"
          ],
          "name": "documented",
          "arity": 1,
          "doc": "Given a list of parsed modules, return a proplist representing\nundocumented functions therein.\n\n```commonlisp\n[#(percentage   {{float 0.0-100.0}}\n #(undocumented [#({{ module name (atom) }}\n                   [\"{{function/arity}}\" ...]),...]))]\n```\n",
          "line": 52
        }
      ],
      "behaviour": [],
      "name": "lodox-parse",
      "doc": "Parsing LFE source files for metadata.\n",
      "filepath": "/Users/mohacker/src/lfe-rebar3/lodox/src/lodox-parse.lfe"
    }
  ],
  "name": "lodox",
  "version": "0.16.3",
  "description": "The LFE rebar3 Lodox plugin.",
  "documents": [],
  "libs": [],
  "documented": {
    "undocumented": {
      "lodox-parse": [],
      "lodox-json-writer": [],
      "lodox-html-writer": [],
      "lodox": []
    },
    "percentage": 100.0
  }
}